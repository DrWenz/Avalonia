<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <OutputType>WinExe</OutputType>
    <TargetFramework>net6.0</TargetFramework>
    <TargetLatestRuntimePatch>true</TargetLatestRuntimePatch>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <InvariantGlobalization>true</InvariantGlobalization>
    <TrimmerDefaultAction>link</TrimmerDefaultAction>
    <IsWindows Condition="$([MSBuild]::IsOSPlatform('Windows'))">true</IsWindows>
    <IsLinux Condition="$([MSBuild]::IsOSPlatform('Linux'))">true</IsLinux>
    <IsOSX Condition="$([MSBuild]::IsOSPlatform('OSX'))">true</IsOSX>
    <DefineConstants Condition="'$(IsOSX)'=='true'">OSX</DefineConstants>
  </PropertyGroup>
  <PropertyGroup>
    <PublishAot>true</PublishAot>
  </PropertyGroup>

  <PropertyGroup>
    <!--Tthese can help when debugging weird exceptions especially when reflection is involved. See https://github.com/dotnet/corert/blob/master/Documentation/using-corert/optimizing-corert.md -->
    <!--RootAllApplicationAssemblies: False -> TrimMode:link See https://github.com/dotnet/runtimelab/issues/597 and https://github.com/dotnet/runtimelab/blob/feature/NativeAOT/docs/using-nativeaot/optimizing.md -->
    <IlcGenerateCompleteTypeMetadata>false</IlcGenerateCompleteTypeMetadata>
    <IlcGenerateStackTraceData>false</IlcGenerateStackTraceData>
    <IlcDisableUnhandledExceptionExperience>true</IlcDisableUnhandledExceptionExperience>
  </PropertyGroup>

  <!-- Instruct NativeAOT to use this native dependency, required to build Avalonia. This library comes from the Windows SDK. -->
  <ItemGroup Condition="'$(IsWindows)'=='true'">
    <NativeLibrary Include="WindowsApp.lib" />
  </ItemGroup>
  
  <PropertyGroup Condition="'$(RunNativeAotCompilation)' == 'true'">
    <IlcTrimMetadata>true</IlcTrimMetadata>
    <RestoreAdditionalProjectSources>https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet7/nuget/v3/index.json</RestoreAdditionalProjectSources>
    <NativeAotCompilerVersion>7.0.0-*</NativeAotCompilerVersion>
  </PropertyGroup>

  <ItemGroup>
    <Compile Include="..\..\src\Avalonia.X11\NativeDialogs\Gtk.cs" Link="NativeControls\Gtk\Gtk.cs" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\..\src\Avalonia.Diagnostics\Avalonia.Diagnostics.csproj" />
    <ProjectReference Include="..\..\src\Avalonia.Headless.Vnc\Avalonia.Headless.Vnc.csproj" />
    <ProjectReference Include="..\..\src\Avalonia.Dialogs\Avalonia.Dialogs.csproj" />
    <ProjectReference Include="..\..\src\Linux\Avalonia.LinuxFramebuffer\Avalonia.LinuxFramebuffer.csproj" />
    <ProjectReference Include="..\Toradex\Toradex.csproj" />
    <ProjectReference Include="..\..\src\Avalonia.X11\Avalonia.X11.csproj" />
    <PackageReference Include="Avalonia.Angle.Windows.Natives" Version="2.1.0.2020091801" />
    <!-- For native controls test -->
    <PackageReference Include="MonoMac.NetStandard" Version="0.0.4" />
  </ItemGroup>

  <ItemGroup Condition="'$(RunNativeAotCompilation)' == 'true'">
    <PackageReference Include="Microsoft.DotNet.ILCompiler" Version="7.0.0-*" />
    <!-- Cross-compilation for Windows x64-arm64 and Linux x64-arm64 -->
    <PackageReference Condition="'$(RuntimeIdentifier)'=='win-arm64'" Include="runtime.win-x64.Microsoft.DotNet.ILCompiler" Version="$(NativeAotCompilerVersion)" />
    <PackageReference Condition="'$(RuntimeIdentifier)'=='linux-arm64'" Include="runtime.linux-x64.Microsoft.DotNet.ILCompiler" Version="$(NativeAotCompilerVersion)" />
  </ItemGroup>

  <PropertyGroup>
    <!-- For Microsoft.CodeAnalysis -->
    <SatelliteResourceLanguages>en</SatelliteResourceLanguages>
    <ApplicationManifest>app.manifest</ApplicationManifest>
  </PropertyGroup>

  <Import Project="..\..\build\SampleApp.props" />
  <Import Project="..\..\build\ReferenceCoreLibraries.props" />
</Project>
